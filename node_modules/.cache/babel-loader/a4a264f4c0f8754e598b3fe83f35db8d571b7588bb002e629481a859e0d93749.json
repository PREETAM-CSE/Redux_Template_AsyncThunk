{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n//const { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\")\n\nconst initialState = {\n  todos: []\n};\nexport const getInitialState = createAsyncThunk(\"todo/getInitialState\",\n// async (_,thunkAPI)=>{\n// // async calls.\n// try{\n//     const res = await axios.get(\"http://localhost:4100/api/todos\")\n//     thunkAPI.dispatch(actions.setInitialState(res.data));\n// }catch(err){\n//     console.log(err);\n// }\n() => {\n  return axios.get(\"http://localhost:4100/api/todos\");\n});\n\n// Creating Reducer using Redux Toolkit\n\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState: initialState,\n  reducers: {\n    // this is add action\n    add: (state, action) => {\n      state.todos.push({\n        text: action.payload,\n        completed: false\n      });\n    },\n    toggle: (state, action) => {\n      state.todos.map((todo, i) => {\n        if (i == action.payload) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getInitialState.fulfilled, (state, action) => {\n      console.log(\"getInitialState is fulfilled\");\n      console.log(action.payload);\n      state.todos = [...action.payload.data];\n    }).addCase(addTodoAsync.fulfilled, (state, action) => {\n      console.log(action.payload);\n      state.todos.push(action.payload);\n    });\n  }\n});\nexport const todoReducer = todoSlice.reducer;\nexport const actions = todoSlice.actions;\n\n// selector\nexport const todoSelector = state => state.todoReducer.todos;\n\n// Reducer using redux\n\n// export function todoReducer(state=initialState, action){\n\n//     switch(action.type){\n//         case ADD_TODO:\n//             return {\n//                 ...state,\n//                 todos:[\n//                     ...state.todos,\n//                     {\n//                         text:action.text,\n//                         completed: false\n//                     }\n//                 ]\n//             }\n//         case TOGGLE_TODO:\n//             return{\n//                 ...state,\n//                 todos: state.todos.map((todo, i)=>{\n//                     if(i==action.index){\n//                         todo.completed=!todo.completed\n//                     }\n//                     return todo;\n//                 })\n//             }\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"names":["axios","createAsyncThunk","initialState","todos","getInitialState","get","todoSlice","createSlice","name","reducers","add","state","action","push","text","payload","completed","toggle","map","todo","i","extraReducers","builder","addCase","fulfilled","console","log","data","addTodoAsync","todoReducer","reducer","actions","todoSelector"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/Redux_Toolkit_Template/todo/src/redux/reducers/todoReducer.js"],"sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n\n//const { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\")\n\nconst initialState={\n    todos:[\n        \n    ]\n}\n\nexport const getInitialState = createAsyncThunk(\"todo/getInitialState\", \n    // async (_,thunkAPI)=>{\n    // // async calls.\n    // try{\n    //     const res = await axios.get(\"http://localhost:4100/api/todos\")\n    //     thunkAPI.dispatch(actions.setInitialState(res.data));\n    // }catch(err){\n    //     console.log(err);\n    // }\n    ()=>{\n        return axios.get(\"http://localhost:4100/api/todos\");\n    }\n    );\n\n// Creating Reducer using Redux Toolkit\n\nconst todoSlice = createSlice({\n    name:'todo',\n    initialState:initialState,\n    reducers:{\n        \n        // this is add action\n        add:(state, action)=>{\n                state.todos.push({\n                    text:action.payload,\n                    completed: false\n                })\n        },\n        toggle:(state, action)=>{\n            state.todos.map((todo, i)=>{\n                if(i==action.payload){\n                    todo.completed=!todo.completed;\n                }\n                return todo;\n            })\n        }\n    },\n    extraReducers:(builder)=>{\n        builder.addCase(getInitialState.fulfilled, (state, action)=>{\n            console.log(\"getInitialState is fulfilled\");\n            console.log(action.payload);\n            state.todos=[...action.payload.data]\n        })\n        .addCase(addTodoAsync.fulfilled, (state, action)=>{\n            console.log(action.payload);\n            state.todos.push(action.payload);\n        })\n    }\n});\n\nexport const todoReducer=todoSlice.reducer;\n\nexport const actions = todoSlice.actions;\n\n// selector\nexport const todoSelector = (state)=>state.todoReducer.todos;\n\n\n\n// Reducer using redux\n\n// export function todoReducer(state=initialState, action){\n\n//     switch(action.type){\n//         case ADD_TODO:\n//             return {\n//                 ...state,\n//                 todos:[\n//                     ...state.todos,\n//                     {\n//                         text:action.text,\n//                         completed: false\n//                     }\n//                 ]\n//             }\n//         case TOGGLE_TODO:\n//             return{\n//                 ...state,\n//                 todos: state.todos.map((todo, i)=>{\n//                     if(i==action.index){\n//                         todo.completed=!todo.completed\n//                     }\n//                     return todo;\n//                 })\n//             }\n//         default:\n//             return state;\n//     }\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;;AAGnD;;AAEA,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC;AAGV,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGH,gBAAgB,CAAC,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI;EACA,OAAOD,KAAK,CAACK,GAAG,CAAC,iCAAiC,CAAC;AACvD,CAAC,CACA;;AAEL;;AAEA,MAAMC,SAAS,GAAGC,WAAW,CAAC;EAC1BC,IAAI,EAAC,MAAM;EACXN,YAAY,EAACA,YAAY;EACzBO,QAAQ,EAAC;IAEL;IACAC,GAAG,EAAC,CAACC,KAAK,EAAEC,MAAM,KAAG;MACbD,KAAK,CAACR,KAAK,CAACU,IAAI,CAAC;QACbC,IAAI,EAACF,MAAM,CAACG,OAAO;QACnBC,SAAS,EAAE;MACf,CAAC,CAAC;IACV,CAAC;IACDC,MAAM,EAAC,CAACN,KAAK,EAAEC,MAAM,KAAG;MACpBD,KAAK,CAACR,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAG;QACvB,IAAGA,CAAC,IAAER,MAAM,CAACG,OAAO,EAAC;UACjBI,IAAI,CAACH,SAAS,GAAC,CAACG,IAAI,CAACH,SAAS;QAClC;QACA,OAAOG,IAAI;MACf,CAAC,CAAC;IACN;EACJ,CAAC;EACDE,aAAa,EAAEC,OAAO,IAAG;IACrBA,OAAO,CAACC,OAAO,CAACnB,eAAe,CAACoB,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAG;MACxDa,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CD,OAAO,CAACC,GAAG,CAACd,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACR,KAAK,GAAC,CAAC,GAAGS,MAAM,CAACG,OAAO,CAACY,IAAI,CAAC;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACK,YAAY,CAACJ,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAG;MAC9Ca,OAAO,CAACC,GAAG,CAACd,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACR,KAAK,CAACU,IAAI,CAACD,MAAM,CAACG,OAAO,CAAC;IACpC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMc,WAAW,GAACvB,SAAS,CAACwB,OAAO;AAE1C,OAAO,MAAMC,OAAO,GAAGzB,SAAS,CAACyB,OAAO;;AAExC;AACA,OAAO,MAAMC,YAAY,GAAIrB,KAAK,IAAGA,KAAK,CAACkB,WAAW,CAAC1B,KAAK;;AAI5D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}