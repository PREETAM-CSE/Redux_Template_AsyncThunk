{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  todos: [{\n    text: \"Go to Gym at 6\",\n    completed: false\n  }, {\n    text: \"Study at 8\",\n    completed: true\n  }]\n};\n\n// Creating Reducer using Redux Toolkit\n\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState: initialState,\n  reducers: {\n    setInitialState: (state, action) => {\n      state.todos = [...action.payload];\n    },\n    // this is add action\n    add: (state, action) => {\n      state.todos.push({\n        text: action.payload,\n        completed: false\n      });\n    },\n    toggle: (state, action) => {\n      state.todos.map((todo, i) => {\n        if (i == action.payload) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n    }\n  }\n});\nexport const todoReducer = todoSlice.reducer;\nexport const actions = todoSlice.actions;\n\n// selector\nexport const todoSelector = state => state.todoReducer.todos;\n\n// Reducer using redux\n\n// export function todoReducer(state=initialState, action){\n\n//     switch(action.type){\n//         case ADD_TODO:\n//             return {\n//                 ...state,\n//                 todos:[\n//                     ...state.todos,\n//                     {\n//                         text:action.text,\n//                         completed: false\n//                     }\n//                 ]\n//             }\n//         case TOGGLE_TODO:\n//             return{\n//                 ...state,\n//                 todos: state.todos.map((todo, i)=>{\n//                     if(i==action.index){\n//                         todo.completed=!todo.completed\n//                     }\n//                     return todo;\n//                 })\n//             }\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"names":["createSlice","require","initialState","todos","text","completed","todoSlice","name","reducers","setInitialState","state","action","payload","add","push","toggle","map","todo","i","todoReducer","reducer","actions","todoSelector"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/Redux_Toolkit_Template/todo/src/redux/reducers/todoReducer.js"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\")\r\n\r\n\r\nconst initialState={\r\n    todos:[\r\n        {text:\"Go to Gym at 6\", completed: false},\r\n        {text: \"Study at 8\", completed: true}\r\n    ]\r\n}\r\n\r\n// Creating Reducer using Redux Toolkit\r\n\r\nconst todoSlice = createSlice({\r\n    name:'todo',\r\n    initialState:initialState,\r\n    reducers:{\r\n        setInitialState:(state, action)=>{\r\n             state.todos=[...action.payload];\r\n        },\r\n        // this is add action\r\n        add:(state, action)=>{\r\n                state.todos.push({\r\n                    text:action.payload,\r\n                    completed: false\r\n                })\r\n        },\r\n        toggle:(state, action)=>{\r\n            state.todos.map((todo, i)=>{\r\n                if(i==action.payload){\r\n                    todo.completed=!todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\nexport const todoReducer=todoSlice.reducer;\r\n\r\nexport const actions = todoSlice.actions;\r\n\r\n// selector\r\nexport const todoSelector = (state)=>state.todoReducer.todos;\r\n\r\n\r\n\r\n// Reducer using redux\r\n\r\n// export function todoReducer(state=initialState, action){\r\n\r\n//     switch(action.type){\r\n//         case ADD_TODO:\r\n//             return {\r\n//                 ...state,\r\n//                 todos:[\r\n//                     ...state.todos,\r\n//                     {\r\n//                         text:action.text,\r\n//                         completed: false\r\n//                     }\r\n//                 ]\r\n//             }\r\n//         case TOGGLE_TODO:\r\n//             return{\r\n//                 ...state,\r\n//                 todos: state.todos.map((todo, i)=>{\r\n//                     if(i==action.index){\r\n//                         todo.completed=!todo.completed\r\n//                     }\r\n//                     return todo;\r\n//                 })\r\n//             }\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAGnD,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC,CACF;IAACC,IAAI,EAAC,gBAAgB;IAAEC,SAAS,EAAE;EAAK,CAAC,EACzC;IAACD,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAI,CAAC;AAE7C,CAAC;;AAED;;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAC,MAAM;EACXL,YAAY,EAACA,YAAY;EACzBM,QAAQ,EAAC;IACLC,eAAe,EAAC,CAACC,KAAK,EAAEC,MAAM,KAAG;MAC5BD,KAAK,CAACP,KAAK,GAAC,CAAC,GAAGQ,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC;IACD;IACAC,GAAG,EAAC,CAACH,KAAK,EAAEC,MAAM,KAAG;MACbD,KAAK,CAACP,KAAK,CAACW,IAAI,CAAC;QACbV,IAAI,EAACO,MAAM,CAACC,OAAO;QACnBP,SAAS,EAAE;MACf,CAAC,CAAC;IACV,CAAC;IACDU,MAAM,EAAC,CAACL,KAAK,EAAEC,MAAM,KAAG;MACpBD,KAAK,CAACP,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAG;QACvB,IAAGA,CAAC,IAAEP,MAAM,CAACC,OAAO,EAAC;UACjBK,IAAI,CAACZ,SAAS,GAAC,CAACY,IAAI,CAACZ,SAAS;QAClC;QACA,OAAOY,IAAI;MACf,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,WAAW,GAACb,SAAS,CAACc,OAAO;AAE1C,OAAO,MAAMC,OAAO,GAAGf,SAAS,CAACe,OAAO;;AAExC;AACA,OAAO,MAAMC,YAAY,GAAIZ,KAAK,IAAGA,KAAK,CAACS,WAAW,CAAChB,KAAK;;AAI5D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}