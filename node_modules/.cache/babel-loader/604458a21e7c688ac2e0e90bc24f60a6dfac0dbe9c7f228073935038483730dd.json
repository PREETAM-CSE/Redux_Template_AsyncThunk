{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  todos: []\n};\nexport const getInitialStateAsync = createAsyncThunk('todo/getInitialState',\n/*\n (arg, thunkAPI)=>{\naxios.get(\"http://localhost:4100/api/todos\").then(res=>\n        {\n          console.log(res.data);\n          //disptach(actions.setInitialState(res.data));\n          thunkAPI.dispatch(actions.setInitialState(res.data));\n        }) */\n\n/* \nasync (_,thunkAPI)=>{\n try{\n    const res = await axios.get(\"http://localhost:4100/api/todos\")\n    thunkAPI.dispatch(actions.setInitialState(res.data));\n }catch(err){\n    console.log(err);\n }\n }\n\n*/\n() => {\n  return axios.get(\"http://localhost:4100/api/todos\");\n});\nexport const addTodoAsync = createAsyncThunk(\"todo/addTodo\", async payload => {\n  const response = await fetch(\"http://localhost:4100/api/todos\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: {}\n  });\n  return response.json();\n});\n\n// Creating Reducer using Redux Toolkit\n\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState: initialState,\n  reducers: {\n    // this is add action\n    add: (state, action) => {\n      state.todos.push({\n        text: action.payload,\n        completed: false\n      });\n    },\n    toggle: (state, action) => {\n      state.todos.map((todo, i) => {\n        if (i === action.payload) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getInitialStateAsync.fulfilled, (state, action) => {\n      state.todos = [...action.payload.data];\n    }).addCase(addTodoAsync.fulfilled, (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const todoReducer = todoSlice.reducer;\nexport const actions = todoSlice.actions;\n\n// selector\nexport const todoSelector = state => state.todoReducer.todos;\n\n// Reducer using redux\n\n// export function todoReducer(state=initialState, action){\n\n//     switch(action.type){\n//         case ADD_TODO:\n//             return {\n//                 ...state,\n//                 todos:[\n//                     ...state.todos,\n//                     {\n//                         text:action.text,\n//                         completed: false\n//                     }\n//                 ]\n//             }\n//         case TOGGLE_TODO:\n//             return{\n//                 ...state,\n//                 todos: state.todos.map((todo, i)=>{\n//                     if(i==action.index){\n//                         todo.completed=!todo.completed\n//                     }\n//                     return todo;\n//                 })\n//             }\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","require","initialState","todos","getInitialStateAsync","get","addTodoAsync","payload","response","fetch","method","headers","body","json","todoSlice","name","reducers","add","state","action","push","text","completed","toggle","map","todo","i","extraReducers","builder","addCase","fulfilled","data","console","log","todoReducer","reducer","actions","todoSelector"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/AyncThunc_Redux_toolkit/src/redux/reducers/todoReducer.js"],"sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst { createSlice } = require(\"@reduxjs/toolkit\")\n\n\nconst initialState={\n    todos:[\n      \n    ]\n}\n\nexport const getInitialStateAsync = createAsyncThunk('todo/getInitialState',\n    /*\n     (arg, thunkAPI)=>{\n    axios.get(\"http://localhost:4100/api/todos\").then(res=>\n            {\n              console.log(res.data);\n              //disptach(actions.setInitialState(res.data));\n              thunkAPI.dispatch(actions.setInitialState(res.data));\n            }) */\n\n           /* \n           async (_,thunkAPI)=>{\n            try{\n               const res = await axios.get(\"http://localhost:4100/api/todos\")\n               thunkAPI.dispatch(actions.setInitialState(res.data));\n            }catch(err){\n               console.log(err);\n            }\n            }\n           \n           */\n          ()=>{\n                 return axios.get(\"http://localhost:4100/api/todos\");\n          }\n);\n\n export const addTodoAsync = createAsyncThunk(\"todo/addTodo\", async(payload)=>{\n    const response = await fetch(\"http://localhost:4100/api/todos\",{\n        method: \"POST\",\n        headers: {\n            \"content-type\":\"application/json\"\n        },\n        body: {\n            \n        }\n    });\n    return response.json();\n })\n\n// Creating Reducer using Redux Toolkit\n\nconst todoSlice = createSlice({\n    name:'todo',\n    initialState:initialState,\n    reducers:{\n       \n        // this is add action\n        add:(state, action)=>{\n                state.todos.push({\n                    text:action.payload,\n                    completed: false\n                })\n        },\n        toggle:(state, action)=>{\n            state.todos.map((todo, i)=>{\n                if(i===action.payload){\n                    todo.completed=!todo.completed;\n                }\n                return todo;\n            })\n        }\n    },\n    extraReducers:(builder)=>{\n         builder.addCase(getInitialStateAsync.fulfilled, (state, action)=>{\n            state.todos=[...action.payload.data]\n         })\n         .addCase(addTodoAsync.fulfilled, (state, action)=>{\n            console.log(action.payload);\n         })\n    }\n});\n\nexport const todoReducer=todoSlice.reducer;\n\nexport const actions = todoSlice.actions;\n\n// selector\nexport const todoSelector = (state)=>state.todoReducer.todos;\n\n\n\n// Reducer using redux\n\n// export function todoReducer(state=initialState, action){\n\n//     switch(action.type){\n//         case ADD_TODO:\n//             return {\n//                 ...state,\n//                 todos:[\n//                     ...state.todos,\n//                     {\n//                         text:action.text,\n//                         completed: false\n//                     }\n//                 ]\n//             }\n//         case TOGGLE_TODO:\n//             return{\n//                 ...state,\n//                 todos: state.todos.map((todo, i)=>{\n//                     if(i==action.index){\n//                         todo.completed=!todo.completed\n//                     }\n//                     return todo;\n//                 })\n//             }\n//         default:\n//             return state;\n//     }\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,MAAM;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAGnD,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC;AAGV,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAGL,gBAAgB,CAAC,sBAAsB;AACvE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACU,MAAI;EACG,OAAOD,KAAK,CAACO,GAAG,CAAC,iCAAiC,CAAC;AAC1D,CAAC,CACV;AAEA,OAAO,MAAMC,YAAY,GAAGP,gBAAgB,CAAC,cAAc,EAAE,MAAMQ,OAAO,IAAG;EAC1E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAC;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAAE,CAEN;EACJ,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACK,IAAI,EAAE;AACzB,CAAC,CAAC;;AAEH;;AAEA,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC1Be,IAAI,EAAC,MAAM;EACXb,YAAY,EAACA,YAAY;EACzBc,QAAQ,EAAC;IAEL;IACAC,GAAG,EAAC,CAACC,KAAK,EAAEC,MAAM,KAAG;MACbD,KAAK,CAACf,KAAK,CAACiB,IAAI,CAAC;QACbC,IAAI,EAACF,MAAM,CAACZ,OAAO;QACnBe,SAAS,EAAE;MACf,CAAC,CAAC;IACV,CAAC;IACDC,MAAM,EAAC,CAACL,KAAK,EAAEC,MAAM,KAAG;MACpBD,KAAK,CAACf,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAG;QACvB,IAAGA,CAAC,KAAGP,MAAM,CAACZ,OAAO,EAAC;UAClBkB,IAAI,CAACH,SAAS,GAAC,CAACG,IAAI,CAACH,SAAS;QAClC;QACA,OAAOG,IAAI;MACf,CAAC,CAAC;IACN;EACJ,CAAC;EACDE,aAAa,EAAEC,OAAO,IAAG;IACpBA,OAAO,CAACC,OAAO,CAACzB,oBAAoB,CAAC0B,SAAS,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAG;MAC9DD,KAAK,CAACf,KAAK,GAAC,CAAC,GAAGgB,MAAM,CAACZ,OAAO,CAACwB,IAAI,CAAC;IACvC,CAAC,CAAC,CACDF,OAAO,CAACvB,YAAY,CAACwB,SAAS,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAG;MAC/Ca,OAAO,CAACC,GAAG,CAACd,MAAM,CAACZ,OAAO,CAAC;IAC9B,CAAC,CAAC;EACP;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM2B,WAAW,GAACpB,SAAS,CAACqB,OAAO;AAE1C,OAAO,MAAMC,OAAO,GAAGtB,SAAS,CAACsB,OAAO;;AAExC;AACA,OAAO,MAAMC,YAAY,GAAInB,KAAK,IAAGA,KAAK,CAACgB,WAAW,CAAC/B,KAAK;;AAI5D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}